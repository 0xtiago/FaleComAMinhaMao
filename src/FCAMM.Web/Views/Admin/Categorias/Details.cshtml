@using FCAMM.Core.Enums
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model FCAMM.Core.Models.CategoriaModel

@{
    ViewData["Title"] = Model.Nome;
    ViewData["ShowBreadcrumb"] = true;
    ViewData["BreadcrumbItems"] = new List<dynamic>
    {
        new { Text = "Admin", Url = "/Admin", IsActive = false },
        new { Text = "Categorias", Url = "/admin/categorias", IsActive = false },
        new { Text = Model.Nome, Url = "", IsActive = true }
    };
}

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header bg-info text-white">
                <div class="d-flex justify-content-between align-items-center">
                    <h4 class="card-title mb-0">
                        <i class="bi bi-tag me-2"></i>
                        @Model.Nome
                    </h4>
                    @if (Model.Ativo)
                    {
                        <span class="badge bg-success fs-6">
                            <i class="bi bi-check-circle me-1"></i>Ativo
                        </span>
                    }
                    else
                    {
                        <span class="badge bg-danger fs-6">
                            <i class="bi bi-x-circle me-1"></i>Inativo
                        </span>
                    }
                </div>
            </div>
            <div class="card-body">
                <div class="row mb-3">
                    <div class="col-sm-3">
                        <strong><i class="bi bi-tag me-1"></i>Nome:</strong>
                    </div>
                    <div class="col-sm-9">
                        @Model.Nome
                    </div>
                </div>
                
                <div class="row mb-3">
                    <div class="col-sm-3">
                        <strong><i class="bi bi-link me-1"></i>Slug:</strong>
                    </div>
                    <div class="col-sm-9">
                        <code>@Model.Slug</code>
                        <a href="/categorias/@Model.Slug" target="_blank" class="btn btn-sm btn-outline-primary ms-2">
                            <i class="bi bi-box-arrow-up-right"></i> Ver página
                        </a>
                    </div>
                </div>
                
                <div class="row mb-3">
                    <div class="col-sm-3">
                        <strong><i class="bi bi-text-paragraph me-1"></i>Descrição:</strong>
                    </div>
                    <div class="col-sm-9">
                        @if (!string.IsNullOrWhiteSpace(Model.Descricao))
                        {
                            <p class="mb-0">@Model.Descricao</p>
                        }
                        else
                        {
                            <em class="text-muted">Nenhuma descrição fornecida</em>
                        }
                    </div>
                </div>
                
                <div class="row mb-3">
                    <div class="col-sm-3">
                        <strong><i class="bi bi-calendar me-1"></i>Criado em:</strong>
                    </div>
                    <div class="col-sm-9">
                        @Model.DataCriacao.ToString("dddd, dd 'de' MMMM 'de' yyyy 'às' HH:mm", new System.Globalization.CultureInfo("pt-BR"))
                    </div>
                </div>
                
                <div class="d-flex gap-2 mt-4">
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">
                        <i class="bi bi-pencil me-1"></i>
                        Editar
                    </a>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="bi bi-arrow-left me-1"></i>
                        Voltar à Lista
                    </a>
                    <button type="button" class="btn btn-danger" onclick="confirmDelete('@Model.Id', '@Model.Nome')">
                        <i class="bi bi-trash me-1"></i>
                        Excluir
                    </button>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-md-4">
        <!-- Card de Estatísticas -->
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="bi bi-graph-up me-2"></i>
                    Estatísticas
                </h5>
            </div>
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <span><i class="bi bi-file-text me-1"></i> Total de Posts:</span>
                    <span class="badge bg-primary fs-6">@(Model.Posts?.Count ?? 0)</span>
                </div>
                
                @if (Model.Posts != null && Model.Posts.Any())
                {
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <span><i class="bi bi-check-circle me-1"></i> Posts Publicados:</span>
                        <span class="badge bg-success fs-6">@Model.Posts.Count(p => p.Status == StatusPostEnum.Aprovado)</span>
                    </div>
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <span><i class="bi bi-clock me-1"></i> Posts Rascunho:</span>
                        <span class="badge bg-warning fs-6">@Model.Posts.Count(p => p.Status == StatusPostEnum.Rascunho)</span>
                    </div>
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <span><i class="bi bi-hourglass me-1"></i> Posts Pendentes:</span>
                        <span class="badge bg-info fs-6">@Model.Posts.Count(p => p.Status == StatusPostEnum.AguardandoAprovacao  )</span>
                    </div>
                }
                
                <hr>
                
                <div class="d-flex justify-content-between align-items-center">
                    <span><i class="bi bi-calendar-check me-1"></i> Criado em:</span>
                    <span class="badge bg-secondary fs-6">@Model.DataCriacao.ToString("dd/MM/yyyy")</span>
                </div>
            </div>
        </div>
        
        <!-- Card de Posts Recentes -->
        @if (Model.Posts != null && Model.Posts.Any())
        {
            <div class="card mt-3">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-file-text me-2"></i>
                        Posts Recentes
                    </h5>
                </div>
                <div class="card-body">
                    @foreach (var post in Model.Posts.OrderByDescending(p => p.DataCriacao).Take(5))
                    {
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <div class="flex-grow-1">
                                <h6 class="mb-1">
                                    <a href="/posts/@post.Slug" target="_blank" class="text-decoration-none">
                                        @post.Titulo
                                    </a>
                                </h6>
                                <small class="text-muted">
                                    <i class="bi bi-person me-1"></i>por @(post.Autor?.Nome ?? "Autor desconhecido")
                                    <i class="bi bi-calendar ms-2 me-1"></i>@post.DataCriacao.ToString("dd/MM/yyyy")
                                </small>
                            </div>
                            <div class="ms-2">
                                @if (post.Status == StatusPostEnum.Aprovado)
                                {
                                    <span class="badge bg-success">
                                        <i class="bi bi-check-circle me-1"></i>Publicado
                                    </span>
                                }
                                else if (post.Status == StatusPostEnum.AguardandoAprovacao)
                                {
                                    <span class="badge bg-warning">
                                        <i class="bi bi-clock me-1"></i>Pendente
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">
                                        <i class="bi bi-file-earmark me-1"></i>Rascunho
                                    </span>
                                }
                            </div>
                        </div>
                        @if (!post.Equals(Model.Posts.OrderByDescending(p => p.DataCriacao).Take(5).Last()))
                        {
                            <hr class="my-2">
                        }
                    }
                    
                    @if (Model.Posts.Count > 5)
                    {
                        <div class="text-center mt-3">
                            <a href="/admin/posts?categoria=@Model.Id" class="btn btn-sm btn-outline-primary">
                                <i class="bi bi-eye me-1"></i>Ver todos os posts
                            </a>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>

<!-- Modal de Confirmação de Exclusão -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="bi bi-exclamation-triangle me-2"></i>
                    Confirmar Exclusão
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Tem certeza que deseja excluir a categoria <strong>@Model.Nome</strong>?</p>
                @if (Model.Posts != null && Model.Posts.Any())
                {
                    <div class="alert alert-warning">
                        <i class="bi bi-exclamation-triangle me-2"></i>
                        <strong>Atenção:</strong> Esta categoria possui @Model.Posts.Count post(s). 
                        Eles serão movidos para "Sem Categoria".
                    </div>
                }
                else
                {
                    <div class="alert alert-info">
                        <i class="bi bi-info-circle me-2"></i>
                        Esta categoria não possui posts associados e pode ser excluída com segurança.
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <form asp-action="ConfirmDelete" asp-route-id="@Model.Id" method="post" class="d-inline">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="bi bi-trash me-1"></i>
                        Excluir Categoria
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function confirmDelete(id, nome) {
            new bootstrap.Modal(document.getElementById('deleteModal')).show();
        }
    </script>
}